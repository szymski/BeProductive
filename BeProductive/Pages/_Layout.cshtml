@using Microsoft.AspNetCore.Components.Web
@namespace BeProductive.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    var isLightTheme = true;
    // isLightTheme = false;
}

<!DOCTYPE html>
<html lang="en" data-theme="@(isLightTheme ? "light" : "dark")">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <base href="~/"/>
    <link href="css/site.css" rel="stylesheet"/>
    <link href="css/dragdrop.css" rel="stylesheet"/>
    <link href="BeProductive.styles.css" rel="stylesheet"/>
    @if (isLightTheme)
    {
        <link href="_content/AntDesign/css/ant-design-blazor.css" rel="stylesheet"/>
    }
    else
    {
        <link href="_content/AntDesign/css/ant-design-blazor.dark.css" rel="stylesheet"/>
    }
    @* <link href="_content/AntDesign/css/ant-design-blazor.aliyun.css" rel="stylesheet"/> *@
    @* <link href="_content/AntDesign/css/ant-design-blazor.compact.css" rel="stylesheet"/> *@
    <script src="_content/AntDesign/js/ant-design-blazor.js"></script>
    <script src="lottie.min.js"></script>
    <script src="auth.js"></script>
    <script src="audio.js"></script>
    <script src="animations.js"></script>
    <link href="manifest.json" rel="manifest"/>
    <link rel="apple-touch-icon" sizes="512x512" href="icon-512.png"/>
    <link rel="apple-touch-icon" sizes="192x192" href="icon-192.png"/>
    <meta name="theme-color" content="#288DFF"/>
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered"/>
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script autostart="false" src="_framework/blazor.server.js"></script>
    <script>navigator.serviceWorker.register('service-worker.js');</script>
    <script>
        Blazor.start({})
            .then(() => {
                  Blazor.defaultReconnectionHandler.onConnectionDown = function () {
                      console.log("Reloading")
                      window.location.reload();
                  };
              });
    </script>
</body>
</html>