@using BeProductive.Modules.GoalExtensions.Description.Infrastructure
@using BeProductive.Modules.GoalExtensions.EmergencyGoal.Infrastructure
@inject GoalDescriptionService GoalDescriptionService

<Divider >
    Description
</Divider>

<div style="padding: 0 24px; text-align: center">
    <div class="goal-description">
        @* TODO: Delete confirmation *@
        @* TODO: Edit icon overlaps text *@
        <EditableText
            WrapperStyle="width: 100%"
            Placeholder="Description"
            Disabled=@(!Goal.HasDescription())
            InitialText=@(Goal.GoalDescription?.Description ?? "")
            Text=@(Goal.GoalDescription?.Description ?? "No description")
            EditButtonStyle="position: absolute"
            MinLength=@(Goal.HasDescription() ? 0 : 1)
            ShowDeleteButton="@Goal.HasDescription()"
            Loading="@_isLoading"
            TextChanged="UpdateDescription"
            OnDelete="@(() => UpdateDescription(null))"/>
    </div>
</div>

<style>
    .goal-description .editable-text-button {
        opacity: 0;
    }
    
    .goal-description:hover .editable-text-button {
        opacity: 1;
    }
</style>

@code {

    [CascadingParameter]
    public Goal Goal { get; set; }

    private bool _isLoading = false;

    private bool _isEditing = false;

    private void OnAddClick()
    {
        _isEditing = true;
    }

    private void CancelAdding()
    {
        _isEditing = false;
    }

    private async Task UpdateDescription(string? value)
    {
        if (string.IsNullOrWhiteSpace(value))
        {
            value = null;
        }

        try
        {
            _isLoading = true;
            var descriptionEntity = await GoalDescriptionService.UpdateDescription(Goal, value);
            await Task.Delay(500);
    // TODO: Rethink this
            Goal.GoalDescription = descriptionEntity;
            NotificationService.Success("The description has been updated");
        }
        catch (Exception e)
        {
            NotificationService.Error("Failed to update description");
            throw e;
        }
        finally
        {
            _isLoading = false;
            _isEditing = false;
        }
    }

}