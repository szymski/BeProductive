@inject GoalService GoalService

@* TODO: Better scrollbar *@

<Modal Title="Select goal"
       OnCancel="() => _visible = false"
       Visible="@_visible"
       Footer="RenderFooter()"
       Centered
       BodyStyle="padding: 0">
    <Spin Size="large" Spinning=@(!_goals.Any()) Style="margin-top: 0.5rem">
        <AntList DataSource="@_goals" Style="overflow: auto; max-height: 50vh; min-height: 200px">
            <ChildContent Context="goal">
                @if (goal is null)
                {
                    <ListItem Class="goal-item" OnClick="() => SelectGoal(null)">
                        <Space Style="margin: 0 1rem; width: 100%; height: 32px">
                            <SpaceItem>
                            </SpaceItem>
                            <SpaceItem Style="width: 100%; text-align: center">
                                <Text Strong Style="font-size: 16px">
                                    None
                                </Text>
                            </SpaceItem>
                        </Space>
                    </ListItem>
                }
                else
                {
                    <ListItem Class="goal-item" OnClick="() => SelectGoal(goal)">
                        <Space Style="margin: 0 1rem; width: 100%; height: 32px">
                            <SpaceItem>
                                @if (string.IsNullOrEmpty(goal.Icon))
                                {

                                    <Avatar Size="large" Style=@($"background: {@goal.Color}")/>
                                }
                                else
                                {

                                    <Avatar Size="large"
                                            Style=@($"color: {@goal.Color}; background: transparent; font-size: 32px")
                                            Icon="@goal.Icon"/>

                                }
                            </SpaceItem>
                            <SpaceItem Style="width: 100%; text-align: center">
                                <Text Strong Style="font-size: 16px">
                                    @goal.Name
                                </Text>
                            </SpaceItem>
                        </Space>
                    </ListItem>
                }
            </ChildContent>
        </AntList>
    </Spin>
</Modal>

<style>
    .goal-item {
        cursor: pointer;
    }
    
    .goal-item:hover {
        background: rgba(0, 0, 0, 0.1);
    }
    
    [data-theme="dark"] .goal-item:hover {
        /* TODO */
        background: rgba(255, 255, 255, 0.2);
    }
</style>

@code {

    private RenderFragment RenderFooter()
        => @<Button Type="@ButtonType.Default" OnClick=@(() => _visible = false)>Cancel</Button>;

}

@code {

    private bool _visible = false;

    private List<Goal?> _goals = new();

    [Parameter]
    public EventCallback<Goal?> OnGoalSelect { get; set; }

    public void Open()
    {
        _visible = true;
        StateHasChanged();

        if (!_goals.Any())
        {
            InvokeAsync(LoadGoals);
        }
    }

    private async Task LoadGoals()
    {
        _goals = (await GoalService.GetGoals())!;
        _goals.Insert(0, null!);
        StateHasChanged();
    }

    private async Task SelectGoal(Goal goal)
    {
        _visible = false;
        await OnGoalSelect.InvokeAsync(goal);
    }

}