@inject RitualGoalService RitualGoalService
@page "/rituals"
@page "/rituals/{ActiveTab}"
@{
    Layout.Title = "Rituals";
}

@if (!_hasRitualGoals)
{
    <Alert Type="@AlertType.Info"
           Message="Add rituals to your goal list"
           ShowIcon="true">
        <p>
            Currently you don't have morning and evening ritual goals on your goal list.
            You can do so by clicking the button below.
        </p>
        <Button Type="@ButtonType.Primary" OnClick="@AddRitualGoals">Add goals</Button>
    </Alert>
}

<Tabs Animated ActiveKey="@ActiveTab" OnTabClick="@OnTabClick">
    <TabPane Tab="Morning ritual" Key="morning">
        <RitualsTab Type="@RitualType.Morning"/>
    </TabPane>
    <TabPane Tab="Evening ritual" Key="evening">
        <RitualsTab Type="@RitualType.Evening"/>
    </TabPane>
</Tabs>

@code {

    private bool _hasRitualGoals = false;
    
    [Parameter]
    public string? ActiveTab { get; set; }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && string.IsNullOrEmpty(ActiveTab))
        {
            NavigationManager.NavigateTo(GetUrlForType(RitualType.Morning), replace: true);
        }
    }

    private void OnTabClick(string key)
    {
        if (key != ActiveTab)
        {
            NavigationManager.NavigateTo(GetUrlForType(key), replace: true);
        }
    }
    
    private async Task AddRitualGoals()
    {
        await RitualGoalService.AddRitualGoals();
        NotificationService.Success("Morning and evening ritual goals added!");
        _hasRitualGoals = true;
    }

}

@code {

    public static string GetUrlForType(RitualType type)
    {
        return $"/rituals/{type.ToString().ToLower()}";
    }

    public static string GetUrlForType(string type)
    {
        return $"/rituals/{type.ToLower()}";
    }

}