@implements IDisposable

<Sider Width="200">
    <div class="sidebar">
        <div style="background: white; display: flex; flex-direction: column; justify-content: center; align-items: center; height: 72px; padding: 16px 0; font-size: 16px">
            <h1 style="border-bottom: 3px solid #1890ff; margin-bottom: -3px">beProductive</h1>
        </div>
        <Menu Class="menu" Mode="@MenuMode.Inline">
            @foreach (var (name, route) in _items)
            {
                <MenuItem RouterLink="@route" RouterMatch="NavLinkMatch.Prefix" Title="@name"/>
            }
        </Menu>
    </div>
</Sider>

@code {

    record MenuItem(string Name, string Route);

    private List<MenuItem> _items = new()
    {
        new("Goals", "/"),
        new("Rituals", "/rituals"),
        new("About", "/about"),
        new("To do", "/todo"),
        new("Components", "/components"),
    };

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs args)
    {
        InvokeAsync(StateHasChanged);
    }

}