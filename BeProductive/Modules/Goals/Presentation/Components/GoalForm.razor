@using Microsoft.AspNetCore.Components
@using System.ComponentModel.DataAnnotations
@using BeProductive.Modules.Goals.Presentation.Models
@using BeProductive.Modules.Goals.Presentation.Pages
@inject IJSRuntime JS

<div>
    <PageHeader BackIcon="true">
        <PageHeaderTitle>
            @(Type == GoalFormType.New ? "Add goal" : $"Edit goal{(GoalName != null ? $" - {GoalName}" : "")}")
        </PageHeaderTitle>
        <PageHeaderContent>
            <Form Model="@Value" OnFinish="@OnFinished">
                <FormItem Label="Name">
                    <Input @bind-Value="@context.Name"/>
                </FormItem>
                <FormItem Style="align-items: center" Label="Color">
                    <ColorPicker @bind-Value="@context.Color"/>
                </FormItem>
                <FormItem Style="align-items: center" Label="Icon">
                    <IconPicker @bind-Value="@context.Icon" Color="@context.Color"/>
                </FormItem>
                @if (Type == GoalFormType.New)
                {
                    <Button Block Type="@ButtonType.Primary" HtmlType="submit">Add goal</Button>
                }
                else if (Type == GoalFormType.Edit)
                {
                    <Space Style="width: 100%">
                        <SpaceItem>
                            @if (IsSystem)
                            {
                                <RenderFragment>
                                    <Text Disabled>This is a system goal. It cannot be deleted.</Text>
                                </RenderFragment>
                            }
                            else
                            {
                                <Popconfirm Title="This cannot be undone!"
                                            OnConfirm="OnDeleted"
                                            OkText="Delete"
                                            OkButtonProps="@(new ButtonProps() { Danger = true })"
                                            CancelText="Cancel"
                                            CancelButtonProps="@(new ButtonProps() { Type = "text" })"
                                            Placement="Placement.Bottom">
                                    <Button Danger Type="@ButtonType.Primary">Delete</Button>
                                </Popconfirm>
                            }
                        </SpaceItem>
                        <SpaceItem Style="margin-left: auto">
                            <Button Type="@ButtonType.Default" OnClick=@(() => JS.InvokeVoidAsync("history.back"))>Cancel</Button>
                        </SpaceItem>
                        <SpaceItem>
                            <Button Type="@ButtonType.Primary" HtmlType="submit">Save</Button>
                        </SpaceItem>
                    </Space>
                }
            </Form>
        </PageHeaderContent>
    </PageHeader>
</div>

@code {

    public enum GoalFormType
    {
        New,
        Edit,
    }

    [Parameter]
    public GoalFormType Type { get; set; }

    [Parameter]
    public string? GoalName { get; set; }

    [Parameter]
    public bool IsSystem { get; set; } = false;

    [Parameter]
    public GoalModel Value { get; set; }

    [Parameter]
    public EventCallback OnFinished { get; set; }

    [Parameter]
    public EventCallback OnDeleted { get; set; }

}