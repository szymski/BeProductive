@using BeProductive.Modules.Goals.Domain
@using BeProductive.Modules.Goals.Domain.Services
@inject GoalDomainService GoalDomainService

<div Class="@(Selected ? "selected" : "")" @onclick="OnClick">
    <Card Class="card" Bordered="true" Size="small" Hoverable>
        <Space Style="width: 100%">
            <SpaceItem>
                @if (string.IsNullOrEmpty(Goal.Icon))
                {
                    <Avatar Size="large" Style=@($"background: {@Goal.Color}")/>
                }
                else
                {
                    <Avatar Size="large" Style=@($"color: {@Goal.Color}; background: transparent; font-size: 36px") Icon="@Goal.Icon"/>
                }
            </SpaceItem>
            <SpaceItem>
                <Text Strong Style="font-size: 18px">
                    @Goal.Name
                </Text>
                @* <Text Disabled>@Goal.Id</Text> *@
                @* <Text Strong >@GoalContext.Goal.Id</Text> *@
            </SpaceItem>
            <SpaceItem Style="float: right; margin-left: auto;">
                <ContextGoalStateSelector/>
            </SpaceItem>
        </Space>
    </Card>
</div>

@code {

    [CascadingParameter]
    public Goal Goal { get; set; }
    
    [CascadingParameter]
    public GoalContext GoalContext { get; set; }

    [Parameter]
    public bool Selected { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnClick { get; set; }

    // [CascadingParameter(Name = nameof(GoalDetails))]
    // public GoalDetails? GoalDetails { get; set; }

    // TODO
    // private async Task OnGoalStateUpdated()
    // {
    //     await GoalDetails?.UpdateStates();
    // }

}