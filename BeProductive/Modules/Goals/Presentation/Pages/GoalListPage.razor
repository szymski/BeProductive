@page "/"
@using Microsoft.AspNetCore.WebUtilities
@inject NavigationManager NavigationManager
@inject GoalService GoalService

<Layout Style="min-height: 100%">
    <Content>
        <Space Direction="DirectionVHType.Vertical" Style="width: 100%">
            @foreach (var goal in _goals)
            {
                <SpaceItem>
                    <GoalListEntry Goal="@goal" OnClick="() => OpenGoalDetails(goal)"/>
                </SpaceItem>
            }
        </Space>

        <div>
            <Button Block Type="@ButtonType.Link" Icon="@IconType.Outline.Plus" @onclick="() => NavigateToAddGoal()">Add goal</Button>
        </div>
    </Content>

    @if (SelectedGoal != null)
    {
        <Sider Theme="SiderTheme.Light" Style="margin-left: 1rem" Width="400">
            <GoalDetails Goal="@SelectedGoal"/>
        </Sider>
    }
</Layout>

@code {

    [Parameter]
    [SupplyParameterFromQuery]
    public int? GoalId { get; set; }

    private Goal? SelectedGoal { get; set; }

    private List<Goal> _goals;

    protected override void OnInitialized()
    {
        _goals = GoalService.GetGoals();
    }

    protected override void OnParametersSet()
    {
        if (GoalId.HasValue)
        {
            Console.WriteLine(GoalId);
            SelectedGoal = _goals.SingleOrDefault(goal => goal.Id == GoalId);
        }
    }

    private void OpenGoalDetails(Goal goal)
    {
        var url = NavigationManager.GetUriWithQueryParameter(nameof(GoalId), goal.Id);
        NavigationManager.NavigateTo(url);
    }

    private void NavigateToAddGoal()
    {
        NavigationManager.NavigateTo("/add-goal");
    }

}

@code
{
    public static string GetUrlWithSelectedGoal(Goal goal) =>
        QueryHelpers.AddQueryString("/", "GoalId", goal.Id.ToString());
}