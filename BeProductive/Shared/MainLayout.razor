@using BeProductive.Modules.Settings.Presentation.Components
@inherits LayoutComponentBase
@implements IDisposable

<SettingsDrawer @ref="_settingsDrawer"/>

<CascadingValue Value="_settingsDrawer">
    <div class="layout">
        <Layout Style="min-height: 100%">
            <Sidebar/>

            <Layout Style="margin-left: 200px; min-height: 100vh">
                <ContextPageHeader/>

                <Content Style="padding: 1rem">
                    @{
                        RenderFragment? body;
                    }
                    <ErrorBoundary @ref="_errorBoundary">
                        <ChildContent>
                            @Body
                        </ChildContent>
                        <ErrorContent Context="error">
                            <ErrorDisplay Exception="@error"/>
                            @Body
                        </ErrorContent>
                    </ErrorBoundary>
                </Content>

                <Footer Class="layout-footer" style="box-sizing: border-box;">
                    <Text Disabled>Copyright Szymon Jankowski © @(DateTime.Today.Year)</Text>
                    <Button OnClick="@OpenSettings" Icon="@IconType.Fill.Setting" Shape="@ButtonShape.Circle" Style="margin-left: 0.5rem;"></Button>
                </Footer>
            </Layout>
        </Layout>
    </div>
</CascadingValue>

@code {

    private SettingsDrawer _settingsDrawer;
    private ErrorBoundary _errorBoundary;

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += OnLocationChanged;

        NotificationService.Config(new()
        {
            // Placement = NotificationPlacement.BottomLeft,
            Top = 12,
        });
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        _errorBoundary.Recover();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    private void OpenSettings()
    {
        _settingsDrawer.Open();
    }

}